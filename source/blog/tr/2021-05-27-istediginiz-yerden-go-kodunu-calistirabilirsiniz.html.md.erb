---
title: "İstediğiniz Yerden Go Kodunu Çalıştırabilirsiniz"
subtitle: "go mod init"
date: 2021-05-27 18:35:00 +0300
tags: golang
cover: "ws-golang.png"
comments: false
---

Dikkatimi çekti, pek çok kişi bu özelliğin ya farkında değil ya da bilmiyor.
Ben de yakın zamanda tam olarak öğrenip konuyu anladım ve çok mutlu oldum.READ_MORE

Yeni bir projeye başlayacağım zaman ilk iş;

```bash
$ cd "$(go env GOPATH)/src/github.com/vigo"
```

yapmak olurdu ve ilgili repoyu bu dizin altında açardım. Ne zaman ki golang’e
modül desteği geldi, bu sayede artık kodun bulunduğu yerin pek bir önemi
kalmadı.

İçinde `go.mod` olan her proje sıkıntısız olarak herhangi bir yerden
çalışabiliyor.

Yeni bir projeye başlayacağım zaman artık;

```bash
$ cd ~/Development/Golang
$ mkdir my-project
$ cd my-project/
$ go mod init github.com/vigo/my-project
```

şeklinde başıyorum. Hatta daha da fantazi yapalım;

```bash
$ cd /tmp/
$ mkdir my-project && cd $_
$ go mod init foo/bar/my-project
go: creating new go.mod: module foo/bar/my-project
```

hemen bakalım `go.mod` dosyasına;

```go
module foo/bar/my-project

go 1.16
```

sonrasında `touch main.go` ile dosyayı oluşturalım ve içini aşağıdaki gibi
dolduralım;

```go
package main

import "fmt"

func main() {
	fmt.Println("Hello World")
}
```

şimdi çalıştıralım:

```bash
$ go run .
Hello World
```

Evet, proje `/tmp/` dizini altında bir yerde bile kolaylıkla çalıştı. Tabii ki
paket ismi olarak `foo/bar/my-project` yapmak iyi bir fikir değil, sadece
bunun bile olabileceğini göstermek istedim.

Siz yeni projelerinizde mutlaka `repo/user/paket` formatından şaşmayın!
